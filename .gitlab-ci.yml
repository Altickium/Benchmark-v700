variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
    - build
    - test

before_script:
    - dos2unix `find . -type f \( -name "*.txt" -o -name "*.sh" \) -print`
    - chmod 755 `find . -type f -name "*.sh" -print`

compile_microbench:
    stage: build
    script:
        - cd microbench
        - make -j$(grep processor /proc/cpuinfo | wc -l)
    artifacts:
        paths:
            - microbench/bin

compile_macrobench:
    stage: build
    script:
        - cd macrobench
        - ./compile.sh
    artifacts:
        paths:
            - macrobench/bin

test_build_coverage_microbench_options:
    stage: test
    script:
        - cd microbench
        - echo
        - echo "#########################################################"
        - echo "## make"
        - echo "#########################################################"
        - make -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## use_asserts=1"
        - echo "#########################################################"
        - make use_asserts=1 -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## use_asserts=1 use_timelines=1"
        - echo "#########################################################"
        - make use_asserts=1 use_timelines=1 -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## has_libpapi=0"
        - echo "#########################################################"
        - make has_libpapi=0 -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## has_libpapi=0 has_libnuma=0"
        - echo "#########################################################"
        - make has_libnuma=0 has_libpapi=0 -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## has_libpapi=0 has_libnuma=0 use_openmp=0"
        - echo "#########################################################"
        - make has_libnuma=0 has_libpapi=0 use_openmp=0 -j$(grep processor /proc/cpuinfo | wc -l) || exit 1

test_build_coverage_microbench_targets:
    stage: test
    script:
        - cd microbench
        - echo
        - echo "#########################################################"
        - echo "## make ds-reclaim-pool"
        - echo "#########################################################"
        - make ds-reclaim-pool -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo
        - echo "#########################################################"
        - echo "## make all (deprecated build path)"
        - echo "#########################################################"
        - make all -j$(grep processor /proc/cpuinfo | wc -l) || exit 1
        - echo

test_build_coverage_microbench_recordmanagers:
    stage: test
    script:
        - cd microbench
        - echo
        - echo "#########################################################"
        - echo "## testing all reclaimers"
        - echo "##   (except for ebr_tree_q, rcu and debraplus, which are not maintained)"
        - echo "## and testing all pools"
        - echo "##   (except for per_thread_and_shared, which is not maintained)"
        - echo "#########################################################"
        - make all DATA_STRUCTURES="brown_ext_abtree_lf" RECLAIMERS="none debra debracap ebr_token ebr_tree hazardptr" POOLS="none numa" -j$(grep processor /proc/cpuinfo | wc -l)

test_microbench_istree_throughput:
    stage: test
    script:
        - mkdir -p tests
        - maxthr=`cd microbench/experiments ; ./get_thread_count_max.sh`
        - thread_pinning=`cd microbench/experiments ; ./get_pinning_cluster.sh`
        - args="-nwork ${maxthr} -nprefill ${maxthr} -i 5 -d 5 -rq 0 -rqsize 1 -k 2000000 -nrq 0 -t 10000 -pin ${thread_pinning}"
        - f="tests/test_microbench_istree_throughput.txt"
        - echo maxthr="$maxthr" thread_pinning="$thread_pinning" f="$f" args="$args"
        - pwd
        - LD_PRELOAD=./lib/libjemalloc.so timeout 600 numactl --interleave=all time ./microbench/bin/ubench_brown_ext_ist_lf.alloc_new.reclaim_debra.pool_none.out $args | tee $f 2>&1
        - tput=`cat $f | grep "total through" | cut -d":" -f2 | tr -d " "`
        - echo "tput=$tput"

test_microbench_experiments_example:
    stage: test
    script:
        - cd microbench_experiments/example
        - ./run_testing.sh

test_macrobench_istree_exp1:
    stage: test
    script:
        - cd macrobench_experiments/istree_exp1
        - ./run_testing.sh
